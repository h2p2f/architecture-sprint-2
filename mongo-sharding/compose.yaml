version: "3"
name: mongo-sharding
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    networks:
      app-network:
        ipv4_address: 10.0.0.2
    volumes:
      - config-data:/data/db
    command:
      ["--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27019"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    networks:
      app-network:
        ipv4_address: 10.0.0.3
    volumes:
      - shard1-data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    networks:
      app-network:
        ipv4_address: 10.0.0.4
    volumes:
      - shard2-data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    networks:
      app-network:
        ipv4_address: 10.0.0.5
    command:
      ["mongos", "--configdb", "config_server/configSrv:27019", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api_sharding_task
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: mongodb://mongos_router:27017/
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 10.0.0.6
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data:
